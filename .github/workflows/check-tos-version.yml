name: Check Terms of Service Version

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  TOS_FILE_PATH: src/views/terms-of-service/index.html

jobs:
  check-tos-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: ${{ env.TOS_FILE_PATH }}

      - name: Check if TOS changed
        id: tos-changed
        run: |
          if [[ "${{ steps.changed-files.outputs.any_changed }}" == "true" ]]; then
            echo "tos_changed=true" >> $GITHUB_OUTPUT
            echo "Terms of Service file has been modified"
          else
            echo "tos_changed=false" >> $GITHUB_OUTPUT
            echo "Terms of Service file has not been modified"
          fi

      - name: Extract versions from both branches
        if: steps.tos-changed.outputs.tos_changed == 'true'
        id: extract-versions
        run: |
          # Function to extract version from TOS file
          extract_version() {
            grep -o 'name="version"[^>]*content="[^"]*"' "${{ env.TOS_FILE_PATH }}" | grep -o 'content="[^"]*"' | sed 's/content="//;s/"//'
          }
          
          # Extract current version
          CURRENT_VERSION=$(extract_version)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"
          
          # Extract base version
          git checkout ${{ github.event.pull_request.base.sha }}
          if [ -f "${{ env.TOS_FILE_PATH }}" ]; then
            BASE_VERSION=$(extract_version)
          else
            BASE_VERSION="file_not_exists"
          fi
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "Base version: $BASE_VERSION"
          git checkout ${{ github.event.pull_request.head.sha }}

      - name: Compare versions and fail if not updated
        if: steps.tos-changed.outputs.tos_changed == 'true'
        id: version-check
        run: |
          CURRENT="${{ steps.extract-versions.outputs.current_version }}"
          BASE="${{ steps.extract-versions.outputs.base_version }}"
          
          echo "Comparing versions:"
          echo "Base version: '$BASE'"
          echo "Current version: '$CURRENT'"
          
          if [[ "$CURRENT" == "$BASE" ]]; then
            echo "version_updated=false" >> $GITHUB_OUTPUT
            echo "❌ Terms of Service contents changed but version was not updated in ${{ env.TOS_FILE_PATH }}. Please update the version in the meta tag before merging"
            exit 1
          else
            echo "version_updated=true" >> $GITHUB_OUTPUT
            echo "✅ Terms of service version has been updated"
          fi
